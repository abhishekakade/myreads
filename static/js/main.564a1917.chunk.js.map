{"version":3,"sources":["components/Book.js","components/Shelf.js","BooksAPI.js","components/pages/MainPage.js","components/pages/SearchPage.js","App.js","index.js"],"names":["Book","_this","this","react_default","a","createElement","className","style","padding","paddingTop","width","title","border","borderRadius","height","backgroundImage","concat","props","book","imageLinks","thumbnail","value","shelf","onChange","e","updateBook","target","disabled","lineHeight","authors","Component","Shelf","_ref","name","books","textAlign","map","key","components_Book","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","MainPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","BooksAPI","setState","state","filter","b","_this2","components_Shelf","Link","to","SearchPage","updateQuery","query","submitSearch","resp","results","_this3","stateQuery","length","error","booksToBeFiltered","forEach","filteredBooks","B","catch","err","console","searchStatus","_this4","type","placeholder","autoFocus","item","BooksApp","Route","exact","path","component","React","ReactDOM","render","HashRouter","src_App","document","getElementById"],"mappings":"8PAgDeA,mLAxCJ,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbC,MAAO,CAAEC,QAAS,OAAQC,WAAY,QAASC,MAAO,UAEtDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKM,MAAM,aAAaL,UAAU,aAChCC,MAAO,CAAEK,OAAQ,iBAAkBC,aAAa,OAC9CH,MAAO,IAAKI,OAAQ,IAEpBC,gBAAe,QAAAC,OAAWd,KAAKe,MAAMC,KAAKC,YAAcjB,KAAKe,MAAMC,KAAKC,WAAWC,WAAc,kBAAlF,SAEnBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEgB,MAAOnB,KAAKe,MAAMC,KAAKI,OAAS,OAEhCC,SAAU,SAACC,GAAD,OAAOvB,EAAKgB,MAAMQ,WAAWxB,EAAKgB,MAAMC,KAAMM,EAAEE,OAAOL,SACjElB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,OAAOM,UAAQ,GAA7B,cACAxB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,oBAAd,qBACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,cAAd,gBACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,QAAd,oBACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,QAAd,WAINlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZJ,KAAKe,MAAMC,KAAKP,OAEnBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbC,MAAO,CAAEE,WAAY,MAAOmB,WAAY,QAEtC1B,KAAKe,MAAMC,KAAKW,SAAW3B,KAAKe,MAAMC,KAAKW,QAAQ,IAAO,sBAtCrDC,aC2BJC,EA1BF,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,MAAOT,EAAiBO,EAAjBP,WAM3B,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAAE4B,UAAW,WAC7ChC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmB2B,GAEjC9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAIV4B,EAAME,IAAI,SAAClB,EAAMmB,GAAP,OACPlC,EAAAC,EAAAC,cAACiC,EAAD,CAAMb,WAAYA,EAAYP,KAAMA,EAAMmB,IAAKA,kBCnBxDE,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAQNS,EAAS,kBACpBC,MAAK,GAAAlC,OAAIuB,EAAJ,UAAiB,CAAEO,YACrBK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKpB,SAEVqB,EAAS,SAACrC,EAAMI,GAAP,OACpB4B,MAAK,GAAAlC,OAAIuB,EAAJ,WAAAvB,OAAiBE,EAAKsC,IAAM,CAC/BC,OAAQ,MACRX,QAAQY,OAAAC,EAAA,EAAAD,CAAA,GACHZ,EADE,CAELc,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEzC,YACtB6B,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UC0BNW,cAlDb,SAAAA,EAAY/C,GAAO,IAAAhB,EAAA,OAAAyD,OAAAO,EAAA,EAAAP,CAAAxD,KAAA8D,IACjB/D,EAAAyD,OAAAQ,EAAA,EAAAR,CAAAxD,KAAAwD,OAAAS,EAAA,EAAAT,CAAAM,GAAAI,KAAAlE,KAAMe,KAgBRQ,WAAa,SAACP,EAAMI,GAClB+C,EAAgBnD,EAAMI,GACrB6B,KAAK,SAAAC,GACJlC,EAAKI,MAAQA,EACbrB,EAAKqE,SAAS,SAAAC,GAAK,MAAK,CACtBrC,MAAOqC,EAAMrC,MAAMsC,OAAO,SAAAC,GAAC,OAAIA,EAAEjB,KAAOtC,EAAKsC,KAAIxC,OAAO,CAACE,UApB7DjB,EAAKsE,MAAQ,CACXrC,MAAO,IAHQjC,mFAQC,IAAAyE,EAAAxE,KAClBmE,IACClB,KAAK,SAAAC,GAEJsB,EAAKJ,SAAS,CAAEpC,MAAOkB,uCAgBzB,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACsE,EAAD,CAAOlD,WAAYvB,KAAKuB,WAAYQ,KAAK,oBAAoBC,MAAOhC,KAAKqE,MAAMrC,MAAMsC,OAAO,SAAAC,GAAC,MAAgB,qBAAZA,EAAEnD,UACnGnB,EAAAC,EAAAC,cAACsE,EAAD,CAAOlD,WAAYvB,KAAKuB,WAAYQ,KAAK,eAAeC,MAAOhC,KAAKqE,MAAMrC,MAAMsC,OAAO,SAAAC,GAAC,MAAgB,eAAZA,EAAEnD,UAC9FnB,EAAAC,EAAAC,cAACsE,EAAD,CAAOlD,WAAYvB,KAAKuB,WAAYQ,KAAK,mBAAmBC,MAAOhC,KAAKqE,MAAMrC,MAAMsC,OAAO,SAAAC,GAAC,MAAgB,SAAZA,EAAEnD,YAItGnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMC,GAAG,WAAU1E,EAAAC,EAAAC,cAAA,sCA7CJyB,aCkIRgD,cAjIb,SAAAA,EAAY7D,GAAO,IAAAhB,EAAA,OAAAyD,OAAAO,EAAA,EAAAP,CAAAxD,KAAA4E,IACjB7E,EAAAyD,OAAAQ,EAAA,EAAAR,CAAAxD,KAAAwD,OAAAS,EAAA,EAAAT,CAAAoB,GAAAV,KAAAlE,KAAMe,KAgBR8D,YAAc,SAACC,GAEb/E,EAAKqE,SAAS,CAAEU,SAAS/E,EAAKgF,eAnBbhF,EA4DnBwB,WAAa,SAACP,EAAMI,GAClB+C,EAAgBnD,EAAMI,GACrB6B,KAAK,SAAA+B,GACJhE,EAAKI,MAAQA,EACbrB,EAAKqE,SAAS,SAAAC,GAAK,MAAK,CACtBrC,MAAOqC,EAAMrC,MAAMsC,OAAO,SAAAC,GAAC,OAAIA,EAAEjB,KAAOtC,EAAKsC,KAAIxC,OAAO,CAACE,UA/D7DjB,EAAKsE,MAAQ,CACXrC,MAAO,GACPiD,QAAS,GACTH,MAAO,IALQ/E,mFASC,IAAAyE,EAAAxE,KAClBmE,IACClB,KAAK,SAAAC,GAEJsB,EAAKJ,SAAS,CAAEpC,MAAOkB,6CAcZ,IFAM4B,EEANI,EAAAlF,KACTmF,EAAanF,KAAKqE,MAAMS,MAE5B,GAAyB,IAAtBK,EAAWC,QAAsC,qBAAfD,GAA6C,OAAfA,EACjE,OAAOnF,KAAKoE,SAAS,CAAEa,QAAS,MFJfH,EEOH9E,KAAKqE,MAAMS,MFN7B9B,MAAK,GAAAlC,OAAIuB,EAAJ,WAAkB,CACrBkB,OAAQ,OACRX,QAAQY,OAAAC,EAAA,EAAAD,CAAA,GACHZ,EADE,CAELc,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEiB,YACtB7B,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKpB,SEDlBiB,KAAK,SAAAC,GAEJ,GAAGA,EAAImC,MACL,OAAOH,EAAKd,SAAS,CAAEa,QAAS,KAIhC,IAAIK,EAAoBJ,EAAKb,MAAMrC,MAUnC,OATAkB,EAAIqC,QAAQ,SAAAhB,GACV,IAAIiB,EAAgBF,EAAkBhB,OAAO,SAAAmB,GAAC,OAAIA,EAAEnC,KAAOiB,EAAEjB,KAE1DkC,EAAc,KAEfjB,EAAEnD,MAAQoE,EAAc,GAAGpE,SAIxB8D,EAAKd,SAAS,CAAEa,QAAS/B,MAKnCwC,MAAM,SAAAC,GAAG,OAAIC,QAAQP,MAAMM,sCAarB,IAGHE,EAHGC,EAAA9F,KAoBP,MAfyB,KAArBA,KAAKqE,MAAMS,MACbe,EACE5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,yDAIqC,IAA9BJ,KAAKqE,MAAMY,QAAQG,SAC5BS,EACE5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,gDAQFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMtE,UAAU,eAAeuE,GAAG,KAAlC,SACA1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BASbH,EAAAC,EAAAC,cAAA,SAAO4F,KAAK,OAAOC,YAAY,4BAC7BC,WAAS,EACT9E,MAAOnB,KAAKqE,MAAMS,MAClBzD,SAAU,SAACC,GAAD,OAAOwE,EAAKjB,YAAYvD,EAAEE,OAAOL,YAKjDlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAIZJ,KAAKqE,MAAMY,QAAQ/C,IAAI,SAACgE,EAAM/D,GAAP,OAAelC,EAAAC,EAAAC,cAACiC,EAAD,CAAMb,WAAYuE,EAAKvE,WAC7DY,IAAKA,EAAKnB,KAAMkF,QAMlBL,UA5HejE,6BCgBVuE,mLATX,OACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYzC,IAClC7D,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAY3B,YAPzB4B,IAAM5E,2BCD7B6E,IAASC,OACPzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAACyG,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.564a1917.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Book extends Component {\r\n\r\n  // componentDidMount() {\r\n  //   console.log(this);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <li>\r\n        <div className=\"book\" \r\n          style={{ padding: \"20px\", paddingTop: \"1.5em\", width: \"200px\"}}\r\n        >\r\n          <div className=\"book-top\">\r\n            <div title=\"Book Cover\" className=\"book-cover\" \r\n              style={{ border: \"2px solid #333\", borderRadius:\"10px\", \r\n                width: 132, height: 200, \r\n                // Added parenthesis around && to fix no mixed operators error \r\n                backgroundImage: `url(\"${(this.props.book.imageLinks && this.props.book.imageLinks.thumbnail) || \"No image found!\"}\")` }}>\r\n            </div>\r\n            <div className=\"book-shelf-changer\">\r\n              <select \r\n                value={this.props.book.shelf || \"none\"} \r\n                // updateBook Props From SearchPage Component \r\n                onChange={(e) => this.props.updateBook(this.props.book, e.target.value)}>\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Plan to Read</option>\r\n                <option value=\"read\">Finished Reading</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"book-title\">\r\n            {this.props.book.title}\r\n          </div>\r\n          <div className=\"book-authors\" \r\n            style={{ paddingTop: \"5px\", lineHeight: \"1.1\" }}>\r\n            {/* Added parenthesis around && to fix no mixed operators error */}\r\n            {(this.props.book.authors && this.props.book.authors[0]) || \"Anonymous\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Book from \"./Book\";\r\n\r\nconst Shelf= ({ name, books, updateBook }) => {\r\n\r\n  // componentDidMount() {\r\n  //   console.log(this, \"Shelf mounted\");\r\n  // }\r\n\r\n  return (\r\n    <div className=\"bookshelf\" style={{ textAlign: \"center\" }}>\r\n      <h2 className=\"bookshelf-title\">{name}</h2>\r\n      {/* {console.log({name})} */}\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n\r\n          {/* updateBook Props From SearchPage Component */}\r\n          {\r\n            books.map((book, key) => \r\n              (<Book updateBook={updateBook} book={book} key={key} />) \r\n            )\r\n          }\r\n\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Shelf;\r\n","const api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Shelf from \"../Shelf\";\r\nimport * as BooksAPI from '../../BooksAPI';\r\n\r\nclass MainPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: []\r\n    }\r\n  }\r\n\r\n  // Lifecycle event to get books from API \r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n    .then(res => {\r\n      // console.log(res);\r\n      this.setState({ books: res });\r\n    });\r\n  }\r\n\r\n  // updateBook method for MainPage here\r\n  updateBook = (book, shelf) => {\r\n    BooksAPI.update(book, shelf)\r\n    .then(res => {\r\n      book.shelf = shelf;\r\n      this.setState(state => ({\r\n        books: state.books.filter(b => b.id !== book.id).concat([book])\r\n      }));\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            \r\n            <Shelf updateBook={this.updateBook} name=\"Currently Reading\" books={this.state.books.filter(b => b.shelf === \"currentlyReading\")} />\r\n            <Shelf updateBook={this.updateBook} name=\"Plan to Read\" books={this.state.books.filter(b => b.shelf === \"wantToRead\")} />\r\n            <Shelf updateBook={this.updateBook} name=\"Finished Reading\" books={this.state.books.filter(b => b.shelf === \"read\")} />\r\n            \r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n        <Link to=\"/search\"><button>Add a book</button></Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from \"../../BooksAPI\";\r\nimport Book from \"../Book\";\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      results: [],\r\n      query: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n    .then(res => {\r\n      // console.log(res);\r\n      this.setState({ books: res });\r\n    });\r\n  }\r\n\r\n  updateQuery = (query) => {\r\n    // this.setState({ query: query }, this.submitSearch); same as written below \r\n    this.setState({ query }, this.submitSearch);\r\n  }\r\n\r\n  // submitSearch() {\r\n  //   if(this.state.query === \"\" || typeof this.state.query === \"undefined\") {\r\n  //     return this.setState({ results: [] });\r\n  //   }\r\n\r\n  submitSearch() {\r\n    let stateQuery = this.state.query;\r\n    // console.log(typeof stateQuery);\r\n    if(stateQuery.length === 0 || typeof stateQuery === \"undefined\" || stateQuery === null) {\r\n      return this.setState({ results: [] });\r\n    }\r\n\r\n    BooksAPI.search(this.state.query)\r\n    .then(res => {\r\n      // console.log(res);\r\n      if(res.error) {\r\n        return this.setState({ results: [] });\r\n      }\r\n      \r\n      else {\r\n        let booksToBeFiltered = this.state.books;\r\n        res.forEach(b => {\r\n          let filteredBooks = booksToBeFiltered.filter(B => B.id === b.id);\r\n          \r\n          if(filteredBooks[0]) {\r\n            // console.log(\"books found!\", filteredBooks[0]);\r\n            b.shelf = filteredBooks[0].shelf;\r\n          }\r\n\r\n        });\r\n        return this.setState({ results: res });\r\n      }\r\n    }\r\n    )\r\n    // Catch and log error to the console \r\n    .catch(err => console.error(err));\r\n  }\r\n\r\n  updateBook = (book, shelf) => {\r\n    BooksAPI.update(book, shelf)\r\n    .then(resp => {\r\n      book.shelf = shelf;\r\n      this.setState(state => ({\r\n        books: state.books.filter(b => b.id !== book.id).concat([book])\r\n      }));\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    // To show search status on page \r\n    let searchStatus;\r\n\r\n    if (this.state.query === \"\") {\r\n      searchStatus = (\r\n        <p className=\"search-status\">\r\n          Type one or more keywords above to start searching...\r\n        </p>\r\n      );\r\n    } else if (this.state.results.length === 0) {\r\n      searchStatus = (\r\n        <p className=\"search-status\">\r\n          No results found. Try different keywords...\r\n        </p>\r\n      );\r\n    }\r\n    // this idea taken from github.com/fernandobrito \r\n\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to=\"/\">Close</Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n              NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n              You can find these search terms here:\r\n              https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n              However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n              you don't find a specific author or title. Every search is limited by search terms.\r\n            */}\r\n            <input type=\"text\" placeholder=\"Search by title or author\" \r\n              autoFocus \r\n              value={this.state.query} \r\n              onChange={(e) => this.updateQuery(e.target.value)}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n\r\n          {/* Show searched books. updateBook here uses setState that rerenders state on change */}\r\n          { \r\n            this.state.results.map((item, key) => <Book updateBook={this.updateBook} \r\n            key={key} book={item} />)\r\n          }\r\n\r\n          </ol>\r\n        </div>\r\n        {/* To show search status on page */}\r\n        { searchStatus }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport MainPage from \"./components/pages/MainPage\";\r\nimport SearchPage from \"./components/pages/SearchPage\";\r\n// import * as BooksAPI from \"./BooksAPI\";\r\n\r\nimport './App.css'\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Route exact path=\"/\" component={ MainPage } />\r\n        <Route exact path=\"/search\" component={ SearchPage } />\r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n// renamed BrowserRouter to HashRouter for GitHub Pages deployment\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>, \r\n  document.getElementById('root'));\r\n  "],"sourceRoot":""}